<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Find Coder</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://zhaxiancheng.com/"/>
  <updated>2016-12-16T09:37:36.825Z</updated>
  <id>http://zhaxiancheng.com/</id>
  
  <author>
    <name>zhaxiancheng</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>zookeeper实现和原理</title>
    <link href="http://zhaxiancheng.com/2016/12/16/zookeeper%E5%AE%9E%E7%8E%B0%E5%92%8C%E5%8E%9F%E7%90%86/"/>
    <id>http://zhaxiancheng.com/2016/12/16/zookeeper实现和原理/</id>
    <published>2016-12-16T08:12:44.000Z</published>
    <updated>2016-12-16T09:37:36.825Z</updated>
    
    <content type="html"><![CDATA[<style>
body 
{
      margin:0px;
      padding:0px;
      font-family:"微软雅黑";
      font-size:15px;
      height:36px;

}

 </style>       


<h3 id="Zookeeper介绍"><a href="#Zookeeper介绍" class="headerlink" title="Zookeeper介绍"></a>Zookeeper介绍</h3><p>ZooKeeper是一个分布式的，开放源码的分布式应用程序协调服务，是Google的Chubby一个开源的实现，是Hadoop和Hbase的重要组件。它是一个为分布式应用提供一致性服务的软件，提供的功能包括：资源配置管理、集群管理、统一命名服务、分布式同步、分布队列管理等。ZooKeeper的目标就是封装好复杂易出错的关键服务，将简单易用的接口和性能高效、功能稳定的系统提供给用户。ZooKeeper包含一个简单的原语集，提供Java和C的接口ZooKeeper代码版本中，提供了分布式独享锁、选举、队列的接口，代码在zookeeper-3.4.3\src\recipes。其中分布锁和队列有Java和C两个版本，选举只有Java版本。ZooKeeper是以Fast Paxos算法为基础的。Zookeeper的动机就是缓解分布式应用从头开始实现分布式协调服务的责任</p>
<h3 id="Zookeeper服务端安装"><a href="#Zookeeper服务端安装" class="headerlink" title="Zookeeper服务端安装"></a>Zookeeper服务端安装</h3><h4 id="单机安装："><a href="#单机安装：" class="headerlink" title="单机安装："></a>单机安装：</h4><p>1.<br>先下载安装包：<a href="http://mirror.bit.edu.cn/apache/zookeeper/zookeeper-3.4.6/zookeeper-3.4.6.tar.gz" target="_blank" rel="external">http://mirror.bit.edu.cn/apache/zookeeper/zookeeper-3.4.6/zookeeper-3.4.6.tar.gz</a><br>官方下载地址：<a href="http://zookeeper.apache.org/releases.html" target="_blank" rel="external">http://zookeeper.apache.org/releases.html</a><br>2.<br>安装后进行解压，目录如下：<br><img src="/2016/12/16/zookeeper实现和原理/1.png" alt="1.png" title=""><br>3.<br>进入conf/目录，将zoo.sample.cfg文件修改成zoo.cfg,配置如下内容：<br><img src="/2016/12/16/zookeeper实现和原理/1.png" alt="1.png" title=""><br>tickTime : 心跳时间，单位是毫秒<br>dataDir：保存内存数据库快照信息的位置<br>dataLogDir：日志目录，如果不添加该参数，zookeeper默认该配置与dataDir是相同目录<br>clientPort：监听客户端连接的端口(服务端开启的端口)<br>4.<br>启动服务端<br>启动：./zkServer.sh start<br>检测：./zkServer.sh status 如果检测后发现还是没有启动成功，可以在bin目录下查看 zookeeper.out日志文件查看启动错误信息。<br>停止：./zkServer.sh stop<br>重启：./zkServer.sh restart<br>5.<br>启动客户端：./zkCli.sh -server localhost:2181<br>6.<br>进入客户端命令行<br>执行help命令获取所有客户端命令列表<br><img src="/2016/12/16/zookeeper实现和原理/3.png" alt="3.png" title=""><br>eg : ls /   展示所有node<br>eg：set /key value 在zookeeper根节点下创建key节点，存储的值为value</p>
<h4 id="伪集群安装："><a href="#伪集群安装：" class="headerlink" title="伪集群安装："></a>伪集群安装：</h4><p>就是在一台物理机上安装多个zookeeper服务实例。步骤1,2同上。<br>3.<br>将解压后的zookeeper-3.4.6 分别拷贝3份在当前目录下：zookeeper_01、zookeeper_02、zookeeper_03<br>4.<br>进入zookeeper_01/conf/目录，将zoo.sample.cfg文件修改成zoo.cfg,配置如下内容：<br><img src="/2016/12/16/zookeeper实现和原理/4.png" alt="4.png" title=""><br>initLimit：zookeeper集群模式下，只有一台server节点是leader，其余server节点是follower。initLimit就是初始化连接时leader和follower之间的最长心跳时间为5个单位(5 <em> tickTime)。<br>syncLimit：集群模式下，leader和follower之间发送消息，请求和应答的最大时间为2个单位(2 </em> tickTime)。<br>server.{X} = {ip}:{port1}:{port2}  集群模式下，X是个数字，与配置的myid中的数字相同，表示是第几号server, ip是该server的ip，port1是该server和集群中的leader交换信息时使用的端口号，port2是该如果需要进行选举leader时，需要占用的端口号。其中clientPort参数在每个节点的zoo.cfg文件配置不同，需要更改每个节点的端口，以免发生冲突。<br>5.<br>在目录dataDir中新建一个myid文件，写上数字，就是4步骤中X的值。是这台server对应的编号。<br>6.<br>依次启动zookeeper集群中各节点 ./zkServer start。通过命令ps -ef|grep zookeeper 命令查看是否启动成功3个zookeeper节点，如果出现异常，查看bin目录下zookeeper.out错误日志文件内容排查问题。<br>7.<br>进行客户端进行连接 ./zkCli -server localhost:2181   ./zkCli -server localhost:2182  ./zkCli -server localhost:2183  进行相关节点操作。  </p>
<h4 id="集群安装："><a href="#集群安装：" class="headerlink" title="集群安装："></a>集群安装：</h4><p>就是在不同物理机上安装多个zookeeper服务实例，与伪集群安装相类似，只是每个节点的zoo.cfg文件内容配置参数基本相同。</p>
<a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;font color=&#39;#9D9D9D&#39; &gt;分布式应用管理技术&lt;/font&gt;
    
    </summary>
    
      <category term="Zookeeper" scheme="http://zhaxiancheng.com/categories/Zookeeper/"/>
    
    
      <category term="&lt;font color=&#39;blue&#39;&gt;java&lt;/font&gt;" scheme="http://zhaxiancheng.com/tags/font-color-blue-java-font/"/>
    
      <category term="&lt;font color=&#39;red&#39;&gt;zookeeper&lt;/font&gt;" scheme="http://zhaxiancheng.com/tags/font-color-red-zookeeper-font/"/>
    
  </entry>
  
  <entry>
    <title>个人技术栈</title>
    <link href="http://zhaxiancheng.com/2016/12/15/%E4%B8%AA%E4%BA%BA%E6%8A%80%E6%9C%AF%E6%A0%88/"/>
    <id>http://zhaxiancheng.com/2016/12/15/个人技术栈/</id>
    <published>2016-12-15T06:07:15.000Z</published>
    <updated>2016-12-16T08:15:12.000Z</updated>
    
    <content type="html"><![CDATA[<img src="/2016/12/15/个人技术栈/Java个人技术栈.png" alt="Java个人技术栈.png" title="">
<a id="more"></a>
]]></content>
    
    <summary type="html">
    
      &lt;font color=&#39;#9D9D9D&#39; &gt;Java开发学习成长之路&lt;/font&gt;
    
    </summary>
    
      <category term="Java" scheme="http://zhaxiancheng.com/categories/Java/"/>
    
    
      <category term="&lt;font color=&#39;blue&#39;&gt;java&lt;/font&gt;" scheme="http://zhaxiancheng.com/tags/font-color-blue-java-font/"/>
    
  </entry>
  
</feed>
